//
//  ZCBHomeDecorationRealEstateInfomationHeaderView.m
//  MUKit_Example
//
//  Created by Jekity on 2017/12/26.
//  Copyright © 2017年 Jeykit. All rights reserved.
//

#import "ZCBHomeDecorationRealEstateInfomationHeaderView.h"
#import "TZImagePickerController.h"
#import "MUAdaptiveView.h"



@interface ZCBHomeDecorationRealEstateInfomationHeaderView()<TZImagePickerControllerDelegate>



@property (weak, nonatomic) IBOutlet UIView *decorationContentView;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *decorationContentViewHeightConstraint;

@property (weak, nonatomic) IBOutlet UIView *houseContentView;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *houseContentViewHeightConstraint;

@property (weak, nonatomic) IBOutlet UIImageView *selectedImageView;

@property (strong, nonatomic) MUAdaptiveView *decoAdaptiveView;
@property (strong, nonatomic) MUAdaptiveView *houlseAdaptiveView;



@end
@implementation ZCBHomeDecorationRealEstateInfomationHeaderView

-(void)awakeFromNib{
    [super awakeFromNib];

    self.selectedLable.userInteractionEnabled     = YES;
    self.selectedImageView.userInteractionEnabled = YES;
    self.houseImageArray                          = [NSMutableArray array];
    self.decorationImageArray                     = [NSMutableArray array];
    
    
    self.decoAdaptiveView = [[MUAdaptiveView alloc]initWithFrame:CGRectMake(0, 0, hScreenWidth, CGRectGetHeight(self.decorationContentView.bounds))];
    self.decoAdaptiveView.backgroundColor = [UIColor whiteColor];
    [self.decorationContentView addSubview:self.decoAdaptiveView];
    self.decoAdaptiveView.tipsImage = [UIImage imageNamed:@"zh_icon_14"];
    self.decoAdaptiveView.tipsString = @"";
    self.decoAdaptiveView.tintColorMu = TTGrayColor(240.);
    
    NSMutableArray *mArray = [NSMutableArray array];
    weakify(self)
    self.decoAdaptiveView.addItemByTaped = ^{
        normalize(self)
        TZImagePickerController *manager = [[TZImagePickerController alloc]initWithMaxImagesCount:500 delegate:self];
        manager.didFinishPickingPhotosHandle = ^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {
            
            [mArray addObjectsFromArray:photos];
            self.decorationImageArray = mArray;
//            [self uploadImage:photos type:@"1"];
            self.decoAdaptiveView.imageArray = mArray;
        };
        
        [[self viewController].navigationController presentViewController:manager animated:YES completion:nil];
    };
    
    self.decoAdaptiveView.changedFrameBlock = ^(CGFloat needHeight) {
       normalize(self)
        self.decorationContentViewHeightConstraint.constant = needHeight;
        self.mj_h = self.mj_h + needHeight - 118.;
        UITableView *tableView = (UITableView *)self.superview;
        [tableView reloadData];
      
    };
    self.houlseAdaptiveView = [[MUAdaptiveView alloc]initWithFrame:CGRectMake(0, 0, hScreenWidth, CGRectGetHeight(self.houseContentView.bounds))];
    [self.houseContentView addSubview:self.houlseAdaptiveView];
    self.houlseAdaptiveView.tipsImage = [UIImage imageNamed:@"zh_icon_14"];
    self.houlseAdaptiveView.backgroundColor = [UIColor whiteColor];
    self.houlseAdaptiveView.tipsString = @"";
     self.houlseAdaptiveView.tintColorMu = TTGrayColor(240.);
    
    NSMutableArray *mmArray = [NSMutableArray array];
    self.houlseAdaptiveView.addItemByTaped = ^{
        normalize(self)
        TZImagePickerController *manager = [[TZImagePickerController alloc]initWithMaxImagesCount:500 delegate:self];
        manager.didFinishPickingPhotosHandle = ^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {
            
            [mmArray addObjectsFromArray:photos];
            self.houseImageArray = mArray;
//            [self uploadImage:photos type:@"3"];
            self.houlseAdaptiveView.imageArray = mmArray;
        };
        
        [[self viewController].navigationController presentViewController:manager animated:YES completion:nil];
    };
    
    self.houlseAdaptiveView.changedFrameBlock = ^(CGFloat needHeight) {
        normalize(self)
        self.houseContentViewHeightConstraint.constant = needHeight;
        self.mj_h = self.mj_h + needHeight - 118.;
        UITableView *tableView = (UITableView *)self.superview;
        [tableView reloadData];
    };
}

@end
